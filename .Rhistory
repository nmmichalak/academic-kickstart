# Chunk 30
glm.fit3 <- glm(y ~ x1, family = gaussian(link = "identity"), data = data2)
# Chunk 31
summary(glm.fit3)
# Chunk 32
roc(response = glm.fit3$data$y, predictor = glm.fit3$fitted.values, direction = "<", plot = TRUE, ci = TRUE, ci.method = "boot", boot.n = 1000)
# Chunk 33
glm.fit4 <- glm(y ~ x1, family = binomial(link = "logit"), data = data2)
# Chunk 34
summary(glm.fit4)
# Chunk 35
exp(coefficients(glm.fit4))
# Chunk 36
roc(response = glm.fit4$data$y, predictor = glm.fit4$fitted.values, direction = "<", plot = TRUE, ci = TRUE, ci.method = "boot", boot.n = 1000)
# Chunk 37
N <- 250
b0 <- 0
b1 <- 1
b2 <- 1
# Chunk 38
# Set random seed so results can be reproduced
set.seed(614513)
x1 <- rnorm(n = N, mean = 0, sd = 1)
x2 <- rnorm(n = N, mean = 0, sd = 1)
# Chunk 39
# Set random seed so results can be reproduced
set.seed(614513)
y <- rbinom(n = N, size = 1, prob = plogis(b0 + b1 * x1 + b2 * x2))
# Chunk 40
data3 <- tibble(id = 1:N, y, x1, x2)
data3 %>%
head() %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover"))
# Chunk 41
glm.fit5 <- glm(y ~ x1 + x2, family = gaussian(link = "identity"), data = data3)
# Chunk 42
# Save a data frame with residuals and fitted values (pihat)
pihat_residual3 <- tibble(model_form = "Linear",
x1 = glm.fit5$data$x1,
x2 = glm.fit5$data$x2,
pihat = glm.fit5$fitted.values,
residual = residuals.glm(glm.fit5, type = "response"))
# Plot fitted values (pihat) and residuals
pihat_residual3 %>%
mutate(impossible = ifelse(pihat < 0 | pihat > 1, "Impossible Value", "Possible Value")) %>%
gather(key = predictor, value = value, x1, x2, pihat) %>%
ggplot(mapping = aes(x = value, y = residual)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80, color = "black") +
geom_point(mapping = aes(color = impossible), size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = NULL) +
post_theme
# Chunk 43
summary(glm.fit5)
# Chunk 44
roc(response = glm.fit5$data$y, predictor = glm.fit5$fitted.values, direction = "<", plot = TRUE, ci = TRUE, ci.method = "boot", boot.n = 1000)
# Chunk 45
glm.fit6 <- glm(y ~ x1 + x2, family = binomial(link = "logit"), data = data3)
# Chunk 46
# Save a data frame with residuals and fitted values (pihat)
pihat_residual4 <- tibble(model_form = "Logistic",
x1 = glm.fit6$data$x1,
x2 = glm.fit6$data$x2,
pihat = glm.fit6$fitted.values,
residual = residuals.glm(glm.fit6, type = "response"))
# Plot fitted values (pihat) and residuals from both linear and logistic models
pihat_residual3 %>%
bind_rows(pihat_residual4) %>%
mutate(impossible = ifelse(pihat < 0 | pihat > 1, "Impossible Value", "Possible Value")) %>%
gather(key = predictor, value = value, x1, x2, pihat) %>%
ggplot(mapping = aes(x = value, y = residual, color = model_form)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = "Model Form") +
post_theme
# Chunk 47
summary(glm.fit6)
# Chunk 48
exp(coefficients(glm.fit6))
# Chunk 49
roc(response = glm.fit6$data$y, predictor = glm.fit6$fitted.values, direction = "<", plot = TRUE, ci = TRUE, ci.method = "boot", boot.n = 1000)
# Chunk 50
tibble(linear_pihat = glm.fit5$fitted.values,
logistic_pihat = glm.fit6$fitted.values) %>%
ggplot(mapping = aes(x = linear_pihat, y = logistic_pihat)) +
geom_vline(xintercept = 0, linetype = "dotted") +
geom_vline(xintercept = 1, linetype = "dotted") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3, alpha = 0.50) +
scale_x_continuous(breaks = seq(-0.20, 1.20, 0.20), labels = percent_format(accuracy = 1)) +
scale_y_continuous(breaks = seq(-1, 1, 0.20), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
labs(x = "Linear Predicted Values", y = "Logistic Predicted Values") +
post_theme
# Chunk 51
# 35 positions for z axis rotation
for (i in seq(0, 350 , 10)) {
print(
expand.grid(x1 = seq(-3, 3, length.out = 10),
x2 = seq(-3, 3, length.out = 10)) %>%
mutate(pihat_linear = predict.glm(glm.fit5, newdata = data.frame(x1, x2), type = "response"),
pihat_logistic = predict.glm(glm.fit6, newdata = data.frame(x1, x2), type = "response")) %>%
wireframe(pihat_linear ~ x1 + x2, data = ., drape = TRUE, colorkey = TRUE, scales = list(arrows = FALSE), screen = list(z = i, x = -60), col.regions = colorRampPalette(c("#0072b2", "#d55e00"))(100), zlab = expression(hat(pi)), xlab = expression(x[1]), ylab = expression(x[2]))
)
}
# Chunk 52
# 35 positions for z axis rotation
for (i in seq(0, 350 , 10)) {
print(
expand.grid(x1 = seq(-3, 3, length.out = 10),
x2 = seq(-3, 3, length.out = 10)) %>%
mutate(pihat_linear = predict.glm(glm.fit5, newdata = data.frame(x1, x2), type = "response"),
pihat_logistic = predict.glm(glm.fit6, newdata = data.frame(x1, x2), type = "response")) %>%
wireframe(pihat_logistic ~ x1 + x2, data = ., drape = TRUE, colorkey = TRUE, scales = list(arrows = FALSE), screen = list(z = i, x = -60), col.regions = colorRampPalette(c("#0072b2", "#d55e00"))(100), zlab = expression(hat(pi)), xlab = expression(x[1]), ylab = expression(x[2]))
)
}
# Chunk 53
N <- 250
b0 <- 0
b1 <- 1
b2 <- 1
# Chunk 54
# Set random seed so results can be reproduced
set.seed(303786)
x1 <- rnorm(n = N, mean = 0, sd = 1)
# Chunk 55
# Set random seed so results can be reproduced
set.seed(303786)
y <- rbinom(n = N, size = 1, prob = plogis(b0 + b1 * x1 + b2 * x1^2))
# Chunk 56
data4 <- tibble(id = 1:N, y, x1, x1_squared = x1^2)
data4 %>%
head() %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover"))
# Chunk 57
glm.fit7 <- glm(y ~ poly(x1, degree = 2), family = gaussian(link = "identity"), data = data4)
# Save a data frame with residuals and fitted values (pihat)
pihat_residual5 <- tibble(model_form = "Linear",
x1 = glm.fit7$data$x1,
x1_squared = glm.fit7$data$x1_squared,
pihat = glm.fit7$fitted.values,
residual = residuals.glm(glm.fit7, type = "response"))
# Plot fitted values (pihat) and residuals
pihat_residual5 %>%
mutate(impossible = ifelse(pihat < 0 | pihat > 1, "Impossible Value", "Possible Value")) %>%
gather(key = predictor, value = value, x1, x1_squared, pihat) %>%
ggplot(mapping = aes(x = value, y = residual)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80, color = "black") +
geom_point(mapping = aes(color = impossible), size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = NULL) +
post_theme
glm.fit8 <- glm(y ~ poly(x1, degree = 2), family = binomial(link = "logit"), data = data4)
# Save a data frame with residuals and fitted values (pihat)
pihat_residual6 <- tibble(model_form = "Logistic",
x1 = glm.fit8$data$x1,
x1_squared = glm.fit8$data$x1_squared,
pihat = glm.fit8$fitted.values,
residual = residuals.glm(glm.fit8, type = "response"))
# Plot fitted values (pihat) and residuals from both linear and logistic models
pihat_residual5 %>%
bind_rows(pihat_residual6) %>%
mutate(impossible = ifelse(pihat < 0 | pihat > 1, "Impossible Value", "Possible Value")) %>%
gather(key = predictor, value = value, x1, x1_squared, pihat) %>%
ggplot(mapping = aes(x = value, y = residual, color = model_form)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = "Model Form") +
post_theme
roc(response = glm.fit7$data$y, predictor = glm.fit7$fitted.values, direction = "<", plot = TRUE, ci = TRUE, ci.method = "boot", boot.n = 1000)
roc(response = glm.fit8$data$y, predictor = glm.fit8$fitted.values, direction = "<", plot = TRUE, ci = TRUE, ci.method = "boot", boot.n = 1000)
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(mapping = aes(color = "Linear"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = gaussian(link = "identity")), se = FALSE) +
geom_smooth(mapping = aes(color = "Logistic"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = binomial(link = "logit")), se = FALSE) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.20), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
labs(y = NULL, title = bquote("Prediction:" ~ hat(pi)), color = "Model Form") +
post_theme
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(mapping = aes(color = "Linear"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = gaussian(link = "identity")), se = FALSE) +
geom_smooth(mapping = aes(color = "Logistic"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = binomial(link = "logit")), se = FALSE) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-2, 2, 0.20), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
labs(y = NULL, title = bquote("Prediction:" ~ hat(pi)), color = "Model Form") +
post_theme
par(mfrow = c(2, 2))
ggplot(data = tibble(x = rnorm(100)), mapping = aes(x = x)) + geom_histogram()
ggplot(data = tibble(x = rnorm(100)), mapping = aes(x = x)) + geom_histogram()
ggplot(data = tibble(x = rnorm(100)), mapping = aes(x = x)) + geom_histogram()
ggplot(data = tibble(x = rnorm(100)), mapping = aes(x = x)) + geom_histogram()
# Save a data frame with residuals and fitted values (pihat)
pihat_residual5 <- tibble(model_form = "Linear",
x1 = glm.fit7$data$x1,
x1_squared = glm.fit7$data$x1_squared,
pihat = glm.fit7$fitted.values,
residual = residuals.glm(glm.fit7, type = "response"))
# Plot fitted values (pihat) and residuals
pihat_residual5 %>%
mutate(impossible = ifelse(pihat < 0 | pihat > 1, "Impossible Value", "Possible Value")) %>%
gather(key = predictor, value = value, x1, x1_squared, pihat) %>%
ggplot(mapping = aes(x = value, y = residual)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80, color = "black") +
geom_point(mapping = aes(color = impossible), size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = NULL) +
post_theme
pihat_residual6 %>%
mutate(impossible = ifelse(pihat < 0 | pihat > 1, "Impossible Value", "Possible Value")) %>%
gather(key = predictor, value = value, x1, x1_squared, pihat) %>%
ggplot(mapping = aes(x = value, y = residual)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80, color = "black") +
geom_point(mapping = aes(color = impossible), size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = NULL) +
post_theme
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(mapping = aes(color = "Linear"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = gaussian(link = "identity")), se = FALSE) +
geom_smooth(mapping = aes(color = "Logistic"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = binomial(link = "logit")), se = FALSE) +
geom_smooth(mapping = aes(color = "Loess"), method = "loess", se = FALSE) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-2, 2, 0.20), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
labs(y = NULL, title = bquote("Prediction:" ~ hat(pi)), color = "Model Form") +
post_theme
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(mapping = aes(color = "Linear"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = gaussian(link = "identity")), se = FALSE) +
geom_smooth(mapping = aes(color = "Logistic"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = binomial(link = "logit")), se = FALSE) +
geom_smooth(mapping = aes(color = "Loess"), method = "loess", se = FALSE) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-2, 2, 0.20), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
labs(y = NULL, title = bquote("Prediction:" ~ hat(pi)), color = "Model Form") +
post_theme
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_smooth()
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_smooth(method = "lm") +
geom_smooth()
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_smooth(mapping = aes(color = "Linear"), method = "lm", se = FALSE) +
geom_smooth(mapping = aes(color = "Loess"), se = FALSE)
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_smooth(mapping = aes(color = "Linear"), method = "lm", formula = y ~ poly(x, degree = 2), se = FALSE) +
geom_smooth(mapping = aes(color = "Loess"), se = FALSE)
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_smooth(mapping = aes(color = "Linear"), method = "lm", formula = y ~ poly(x, degree = 2), se = FALSE) +
geom_smooth(mapping = aes(color = "Loess"), se = FALSE) +
geom_smooth(mapping = aes(color = "Loess"), method = "glm", method.args = list(family = binomial), formula = y ~ poly(x, degree = 2), se = FALSE)
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_smooth(mapping = aes(color = "Linear"), method = "lm", formula = y ~ poly(x, degree = 2), se = FALSE) +
geom_smooth(mapping = aes(color = "Loess"), se = FALSE) +
geom_smooth(mapping = aes(color = "Logistic"), method = "glm", method.args = list(family = binomial), formula = y ~ poly(x, degree = 2), se = FALSE)
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_smooth(mapping = aes(color = "Linear"), method = "lm", formula = y ~ poly(x, degree = 2), se = FALSE) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1) +
geom_smooth(mapping = aes(color = "Loess"), se = FALSE) +
geom_smooth(mapping = aes(color = "Logistic"), method = "glm", method.args = list(family = binomial), formula = y ~ poly(x, degree = 2), se = FALSE)
# Save a data frame with residuals and fitted values (pihat)
pihat_residual5 <- tibble(model_form = "Linear",
x1 = glm.fit7$data$x1,
x1_squared = glm.fit7$data$x1_squared,
pihat = glm.fit7$fitted.values,
residual = residuals.glm(glm.fit7, type = "response"))
# Plot fitted values (pihat) and residuals
pihat_residual5 %>%
mutate(impossible = ifelse(pihat < 0 | pihat > 1, "Impossible Value", "Possible Value")) %>%
gather(key = predictor, value = value, x1, x1_squared, pihat) %>%
ggplot(mapping = aes(x = value, y = residual)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80, color = "black") +
geom_point(mapping = aes(color = impossible), size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = NULL) +
post_theme
summary(glm.fit7)
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(mapping = aes(color = "Linear"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = gaussian(link = "identity")), se = FALSE) +
geom_smooth(mapping = aes(color = "Logistic"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = binomial(link = "logit")), se = FALSE) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-2, 2, 0.20), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
labs(y = NULL, title = bquote("Prediction:" ~ hat(pi)), color = "Model Form") +
post_theme
glm.fit7
glm(y ~ x1 + x1_squared, family = gaussian(link = "identity"), data = data4)
summary(glm(y ~ x1 + x1_squared, family = gaussian(link = "identity"), data = data4))
model.matrix(glm.fit7)
model.matrix(glm.fit7) %>% str()
model.matrix(glm.fit7) %>% as_tibble()
model.matrix(glm.fit7) %>% as_tibble() %>% mutate(x1 = data4$x1, x1_squared = x1 = data4$x1_squared)
model.matrix(glm.fit7) %>% as_tibble() %>% mutate(x1 = data4$x1, x1_squared = data4$x1_squared)
model.matrix(glm.fit7) %>% as_tibble() %>% mutate(x1 = data4$x1, x1_squared = data4$x1_squared) %>% select(-1) %>% cor() %>% round(2)
N <- 250
b0 <- 0
b1 <- 1
b2 <- 1
# Set random seed so results can be reproduced
set.seed(303786)
x1 <- rnorm(n = N, mean = 0, sd = 1)
# Set random seed so results can be reproduced
set.seed(303786)
y <- rbinom(n = N, size = 1, prob = plogis(b0 + b1 * x1 + b2 * x1^2))
data4 <- tibble(id = 1:N, y, x1, x1_squared = x1^2)
data4 %>%
head() %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover"))
glm.fit7 <- glm(y ~ poly(x1, degree = 2), family = gaussian(link = "identity"), data = data4)
model.matrix(glm.fit7) %>% as_tibble() %>% mutate(x1 = data4$x1, x1_squared = data4$x1_squared) %>% select(-1) %>% cor() %>% round(2)
tibble(x = rnorm(1000)) %>% mutate(xsq = x^2) %>% cor() %>% round(2)
tibble(x = rnorm(100)) %>% mutate(xsq = x^2) %>% cor() %>% round(2)
tibble(x = rnorm(100)) %>% mutate(xsq = x^2) %>% cor() %>% round(2)
tibble(x = rnorm(100)) %>% mutate(xsq = x^2) %>% cor() %>% round(2)
tibble(x = rnorm(100)) %>% mutate(xsq = x^2) %>% cor() %>% round(2)
blogdown:::serve_site()
roc(response = glm.fit7$data$y, predictor = glm.fit7$fitted.values, direction = "<", plot = TRUE, ci = TRUE, ci.method = "boot", boot.n = 1000)
par(mfrow = c(1, 1))
roc(response = glm.fit7$data$y, predictor = glm.fit7$fitted.values, direction = "<", plot = TRUE, ci = TRUE, ci.method = "boot", boot.n = 1000)
glm.fit8 <- glm(y ~ poly(x1, degree = 2), family = binomial(link = "logit"), data = data4)
# Save a data frame with residuals and fitted values (pihat)
pihat_residual6 <- tibble(model_form = "Logistic",
x1 = glm.fit8$data$x1,
x1_squared = glm.fit8$data$x1_squared,
pihat = glm.fit8$fitted.values,
residual = residuals.glm(glm.fit8, type = "response"))
# Plot fitted values (pihat) and residuals from both linear and logistic models
pihat_residual5 %>%
bind_rows(pihat_residual6) %>%
mutate(impossible = ifelse(pihat < 0 | pihat > 1, "Impossible Value", "Possible Value")) %>%
gather(key = predictor, value = value, x1, x1_squared, pihat) %>%
ggplot(mapping = aes(x = value, y = residual, color = model_form)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = "Model Form") +
post_theme
model.matrix(glm.fit8)[, 2] %>% summary()
model.matrix(glm.fit8)[, 3] %>% summary()
exp(coefficients(glm.fit8))
roc(response = glm.fit8$data$y, predictor = glm.fit8$fitted.values, direction = "<", plot = TRUE, ci = TRUE, ci.method = "boot", boot.n = 1000)
roc(response = glm.fit7$data$y, predictor = glm.fit7$fitted.values, direction = "<", plot = TRUE, ci = TRUE, ci.method = "boot", boot.n = 1000)
tibble(linear_pihat = glm.fit7$fitted.values,
logistic_pihat = glm.fit8$fitted.values) %>%
ggplot(mapping = aes(x = linear_pihat, y = logistic_pihat)) +
geom_vline(xintercept = 0, linetype = "dotted") +
geom_vline(xintercept = 1, linetype = "dotted") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3, alpha = 0.50) +
scale_x_continuous(breaks = seq(-0.20, 1.20, 0.20), labels = percent_format(accuracy = 1)) +
scale_y_continuous(breaks = seq(-1, 1, 0.10), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
labs(x = "Linear Predicted Values", y = "Logistic Predicted Values") +
post_theme
glm.fit8$fitted.values
hist(glm.fit7$fitted.values)
hist(glm.fit8$fitted.values)
tibble(linear_pihat = glm.fit7$fitted.values,
logistic_pihat = glm.fit8$fitted.values) %>%
ggplot(mapping = aes(x = linear_pihat, y = logistic_pihat)) +
geom_vline(xintercept = 0, linetype = "dotted") +
geom_vline(xintercept = 1, linetype = "dotted") +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
geom_point(size = 3, alpha = 0.50) +
scale_x_continuous(breaks = seq(-2, 2, 0.20), labels = percent_format(accuracy = 1)) +
scale_y_continuous(breaks = seq(-1, 1, 0.10), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
labs(x = "Linear Predicted Values", y = "Logistic Predicted Values") +
post_theme
# 35 positions for z axis rotation
for (i in seq(0, 350 , 10)) {
print(
expand.grid(x1 = seq(-3, 3, length.out = 10),
x1_squared = seq(-3, 3, length.out = 10)^2) %>%
mutate(pihat_linear = predict.glm(glm.fit7, newdata = data.frame(x1, x1_squared), type = "response"),
pihat_logistic = predict.glm(glm.fit8, newdata = data.frame(x1, x1_squared), type = "response")) %>%
wireframe(pihat_linear ~ x1 + x1_squared, data = ., drape = TRUE, colorkey = TRUE, scales = list(arrows = FALSE), screen = list(z = i, x = -60), col.regions = colorRampPalette(c("#0072b2", "#d55e00"))(100), zlab = expression(hat(pi)), xlab = expression(x[1]), ylab = expression(x[1]^2))
)
}
# 35 positions for z axis rotation
for (i in seq(0, 350 , 10)) {
print(
expand.grid(x1 = seq(-3, 3, length.out = 10),
x1_squared = seq(-3, 3, length.out = 10)^2) %>%
mutate(pihat_linear = predict.glm(glm.fit7, newdata = data.frame(x1, x1_squared), type = "response"),
pihat_logistic = predict.glm(glm.fit8, newdata = data.frame(x1, x1_squared), type = "response")) %>%
wireframe(pihat_logistic ~ x1 + x1_squared, data = ., drape = TRUE, colorkey = TRUE, scales = list(arrows = FALSE), screen = list(z = i, x = -60), col.regions = colorRampPalette(c("#0072b2", "#d55e00"))(100), zlab = expression(hat(pi)), xlab = expression(x[1]), ylab = expression(x[1]^2))
)
}
data4 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(mapping = aes(color = "Linear"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = gaussian(link = "identity")), se = FALSE) +
geom_smooth(mapping = aes(color = "Logistic"), method = "glm", formula = y ~ poly(x, degree = 2), method.args = list(family = binomial(link = "logit")), se = FALSE) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-2, 2, 0.20), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
labs(y = NULL, title = bquote("Prediction:" ~ hat(pi)), color = "Model Form") +
post_theme
round(exp(coefficients(glm.fit8))[2], 2)
plogis(2)
1 / (1 + exp(-2))
show_col(ggthemes::colorblind_pal()(8))
# Plot fitted values (pihat) and residuals
pihat_residual3 %>%
mutate(impossible = ifelse(pihat < 0 | pihat > 1, "Impossible Value", "Possible Value")) %>%
gather(key = predictor, value = value, x1, x2, pihat) %>%
ggplot(mapping = aes(x = value, y = residual)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80, color = "black") +
geom_point(mapping = aes(color = impossible), size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#e69f00", "#009e73")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = NULL) +
post_theme
# Plot fitted values (pihat) and residuals
pihat_residual3 %>%
mutate(impossible = ifelse(pihat < 0 | pihat > 1, "Impossible Value", "Possible Value")) %>%
gather(key = predictor, value = value, x1, x2, pihat) %>%
ggplot(mapping = aes(x = value, y = residual)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80, color = "black") +
geom_point(mapping = aes(color = impossible), size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#e69f00", "#000000")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = NULL) +
post_theme
# Plot fitted values (pihat) and residuals from both linear and logistic models
pihat_residual5 %>%
bind_rows(pihat_residual6) %>%
gather(key = predictor, value = value, x1, x1_squared, pihat) %>%
ggplot(mapping = aes(x = value, y = residual, color = model_form)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_smooth(method = "loess", se = FALSE, span = 0.80) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.25), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
facet_wrap(facets = ~ predictor, scales = "free_x") +
labs(x = NULL, y = expression(Residual: y - hat(pi)), color = "Model Form") +
post_theme
exp(coefficients(glm.fit8))
round(2.191300e+07, 2)
(round(exp(coefficients(glm.fit8))[3], 2) - 1 )* 100
round((round(exp(coefficients(glm.fit8))[3], 2) - 1 ) * 100, 2)
post_theme
data1 %>%
ggplot(mapping = aes(x = x1, y = y)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_hline(yintercept = 1, linetype = "dotted") +
geom_smooth(mapping = aes(color = "Linear"), method = "glm", formula = y ~ x, method.args = list(family = gaussian(link = "identity")), se = FALSE) +
geom_smooth(mapping = aes(color = "Logistic"), method = "glm", formula = y ~ x, method.args = list(family = binomial(link = "logit")), se = FALSE) +
geom_point(size = 3, alpha = 0.50) +
scale_y_continuous(breaks = seq(-1, 1, 0.20), labels = percent_format(accuracy = 1)) +
scale_color_manual(values = c("#d55e00", "#0072b2")) +
labs(x = expression(x[1]), y = NULL, title = bquote("Prediction:" ~ hat(pi)), color = "Model Form") +
post_theme
?exp
plogis(1.2394 )
