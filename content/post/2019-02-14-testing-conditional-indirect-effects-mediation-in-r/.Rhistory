# install.packages("tidyverse")
# install.packages("knitr")
# install.packages("lavaan")
# install.packages("psych")
library(tidyverse)
library(knitr)
library(lavaan)
library(psych)
file.choose()
file.choose()
thirst.normal <- read_csv("/Users/nicholasmichalak/nickmichalak/content/post/2019-02-14-testing-conditional-indirect-effects-mediation-in-r/data/mackinnon_2008_t3.1.csv")
thirst.fit <- read_csv("/Users/nicholasmichalak/nickmichalak/content/post/2019-02-14-testing-conditional-indirect-effects-mediation-in-r/data/mackinnon_2008_t10.1.csv")
# Chunk 1
# install.packages("tidyverse")
# install.packages("knitr")
# install.packages("lavaan")
# install.packages("psych")
library(tidyverse)
library(knitr)
library(lavaan)
library(psych)
# Chunk 2
thirst.normal <- read_csv("data/mackinnon_2008_t3.1.csv")
thirst.fit <- read_csv("data/mackinnon_2008_t10.1.csv")
# Chunk 3
thirst.fit$id <- 51:100
# Chunk 4
thirst.normal$phys_fit <- -0.5
thirst.fit$phys_fit <- 0.5
# Chunk 5
thirst.data <- bind_rows(thirst.normal, thirst.fit)
# Chunk 6
thirst.data <- thirst.data %>%
mutate(id = factor(id),
room_temp_c = room_temp - mean(room_temp),
thirst_c = thirst - mean(thirst))
# Chunk 7
thirst.data <- thirst.data %>%
mutate(tmp_fit = room_temp_c * phys_fit,
thrst_fit = thirst_c * phys_fit)
# Chunk 8
thirst.data %>%
headTail() %>%
kable()
# Chunk 9
thirst.data %>%
write_csv(path = "data/thirst.data.csv")
# Chunk 10
thirst.data %>%
select(room_temp, room_temp_c, thirst, thirst_c, consume, phys_fit, tmp_fit, thrst_fit) %>%
pairs.panels(scale = FALSE, pch = ".")
# Chunk 11
mod1 <- "# a path
thirst_c ~ a1 * room_temp_c
thirst_c ~ a2 * phys_fit
thirst_c ~ a3 * tmp_fit
# b paths
consume ~ b1 * thirst_c
# c prime path
consume ~ cp * room_temp_c
# index of moderated mediation and conditional indirect effects
b1a3 := b1 * a3
normss := a1 + a3 * -0.5
fitss := a1 + a3 * 0.5
norm := a1 * b1 + b1a3 * -0.5
fit := a1 * b1 + b1a3 * 0.5"
# Chunk 12
set.seed(1234)
# Chunk 13
sem.fit1 <- sem(mod1, data = thirst.data, se = "bootstrap", bootstrap = 10000)
View(thirst.data)
parameterestimates(sem.fit1, boot.ci.type = "bca.simple", standardized = TRUE)
parameterestimates(sem.fit1, boot.ci.type = "bca.simple", standardized = TRUE) %>% View()
mod1 <- "# a path
thirst_c ~ a1 * room_temp_c
thirst_c ~ a2 * phys_fit
thirst_c ~ a3 * tmp_fit
# covariances
room_temp_c ~~ phys_fit
room_temp_c ~~ tmp_fit
phys_fit ~~ tmp_fit
# b paths
consume ~ b1 * thirst_c
# c prime path
consume ~ cp * room_temp_c
# index of moderated mediation and conditional indirect effects
b1a3 := b1 * a3
normss := a1 + a3 * -0.5
fitss := a1 + a3 * 0.5
norm := a1 * b1 + b1a3 * -0.5
fit := a1 * b1 + b1a3 * 0.5"
set.seed(1234); sem.fit1 <- sem(mod1, data = thirst.data, se = "bootstrap", bootstrap = 10000)
parameterestimates(sem.fit1, boot.ci.type = "bca.simple", standardized = TRUE) %>% View()
summary(sem.fit1, standardized = TRUE, fit.measures = TRUE)
mod1 <- "# a path
thirst_c ~ a1 * room_temp_c
thirst_c ~ a2 * phys_fit
thirst_c ~ a3 * tmp_fit
# covariances
room_temp_c ~~ phys_fit
room_temp_c ~~ tmp_fit
room_temp_c ~~ thirst_c
phys_fit ~~ tmp_fit
# b paths
consume ~ b1 * thirst_c
# c prime path
consume ~ cp * room_temp_c
# index of moderated mediation and conditional indirect effects
b1a3 := b1 * a3
normss := a1 + a3 * -0.5
fitss := a1 + a3 * 0.5
norm := a1 * b1 + b1a3 * -0.5
fit := a1 * b1 + b1a3 * 0.5"
set.seed(1234); sem.fit1 <- sem(mod1, data = thirst.data, se = "bootstrap", bootstrap = 10000)
summary(sem.fit1, standardized = TRUE, fit.measures = TRUE)
mod1 <- "# a path
thirst_c ~ 1 + a1 * room_temp_c
thirst_c ~ 1 + a2 * phys_fit
thirst_c ~ 1 + a3 * tmp_fit
# b paths
consume ~ 1 + b1 * thirst_c
# c prime path
consume ~ 1 + cp * room_temp_c
# index of moderated mediation and conditional indirect effects
b1a3 := b1 * a3
normss := a1 + a3 * -0.5
fitss := a1 + a3 * 0.5
norm := a1 * b1 + b1a3 * -0.5
fit := a1 * b1 + b1a3 * 0.5"
set.seed(1234); sem.fit1 <- sem(mod1, data = thirst.data, se = "bootstrap", bootstrap = 10000)
mod1 <- "# a path
thirst_c ~ 1 + a1 * room_temp_c
thirst_c ~ a2 * phys_fit
thirst_c ~ a3 * tmp_fit
# b paths
consume ~ 1 + b1 * thirst_c
# c prime path
consume ~ 1 + cp * room_temp_c
# index of moderated mediation and conditional indirect effects
b1a3 := b1 * a3
normss := a1 + a3 * -0.5
fitss := a1 + a3 * 0.5
norm := a1 * b1 + b1a3 * -0.5
fit := a1 * b1 + b1a3 * 0.5"
set.seed(1234); sem.fit1 <- sem(mod1, data = thirst.data, se = "bootstrap", bootstrap = 10000)
mod1 <- "# a path
thirst_c ~ 1 + a1 * room_temp_c
thirst_c ~ a2 * phys_fit
thirst_c ~ a3 * tmp_fit
# b paths
consume ~ b1 * thirst_c
# c prime path
consume ~ 1 + cp * room_temp_c
# index of moderated mediation and conditional indirect effects
b1a3 := b1 * a3
normss := a1 + a3 * -0.5
fitss := a1 + a3 * 0.5
norm := a1 * b1 + b1a3 * -0.5
fit := a1 * b1 + b1a3 * 0.5"
set.seed(1234); sem.fit1 <- sem(mod1, data = thirst.data, se = "bootstrap", bootstrap = 10000)
combn(5, 2)
combn(4, 2)
summary(sem.fit1, standardized = TRUE, fit.measures = TRUE)
sem.fit1 <- sem(mod1, data = thirst.data, se = "bootstrap", bootstrap = 10000, likelihood = "wishart")
summary(sem.fit1, standardized = TRUE, fit.measures = TRUE)
parameterestimates(sem.fit1, boot.ci.type = "bca.simple", standardized = TRUE) %>% View()
fitted(sem.fit1)
15 - 9
vcov(sem.fit1)
resid(sem.fit1)
?resid
?vcov()
