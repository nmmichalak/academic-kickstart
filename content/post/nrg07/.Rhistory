mutate(Orientation = Orientation %>% factor(levels = 0:1, labels = c("noattend", "attend"))) %>%
spread(key = Class, value = Happy, ID)
kindergarten %>%
select(ID, Class, Orientation, Happy) %>%
mutate(Orientation = Orientation %>% factor(levels = 0:1, labels = c("noattend", "attend"))) %>%
spread(key = Class, value = Happy)
kindergarten %>%
select(ID, Class, Orientation, Happy) %>%
mutate(Orientation = Orientation %>% factor(levels = 0:1, labels = c("noattend", "attend"))) %>%
spread(key = Orientation, value = Happy)
View(kindergarten)
wkindergarten <- kindergarten %>%
select(ID, Class, Orientation, Happy) %>%
mutate(Orientation = Orientation %>% factor(levels = 0:1, labels = c("noattend", "attend"))) %>%
spread(key = Orientation, value = Happy)
wkindergarten[, 3:4]
colMeans(wkindergarten[, 3:4], na.rm = TRUE)
colmeans <- colMeans(wkindergarten[, 3:4], na.rm = TRUE)
rowmeans <- rowMeans(wkindergarten[, 3:4], na.rm = TRUE)
colmeans
rowmeans
wkindergarten[, 3]
# errors
wkindergarten[, 3] - colmeans[1]
# errors
cbind(wkindergarten[, 3] - colmeans[1],
wkindergarten[, 4] - colmeans[2])
cov(cbind(wkindergarten[, 3] - colmeans[1],
wkindergarten[, 4] - colmeans[2]))
library(psych)
# errors
corFiml(cbind(wkindergarten[, 3] - colmeans[1],
wkindergarten[, 4] - colmeans[2]))
# Chunk 1
library(tidyverse)
library(knitr)
library(nlme)
# Chunk 2
kindergarten <- "~/Google Drive/2018W_PSYCH_614/homework_06/kindergarten.csv" %>% read_csv() %>%
mutate(Orientation_lbl = Orientation %>% recode(`0` = "Didn't Attend", `1` = "Attended"))
# Chunk 3
kindergarten %>%
group_by(Class, Orientation_lbl) %>%
summarise(M = mean(Happy) %>% round(2),
SD = sd(Happy) %>% round(2),
n = length(Happy) %>% round(2)) %>%
kable()
# Chunk 4
kindergarten %>%
ggplot(mapping = aes(x = Orientation_lbl, y = Happy, color = Orientation_lbl)) +
geom_point(position = position_jitterdodge(), alpha = 0.25) +
stat_summary(geom = "point", fun.data = mean_cl_normal) +
stat_summary(geom = "errorbar", fun.data = mean_sdl, width = 0) +
facet_wrap(facets = ~ Class) +
theme(legend.position = "top")
# Chunk 5
gls01 <- gls(Happy ~ Orientation, data = kindergarten, method = "ML")
# Chunk 6
summary(gls01)
# Chunk 7
intervals(gls01)
# Chunk 8
lme01 <- lme(Happy ~ Orientation, random = ~ 1 | Class, data = kindergarten, method = "ML")
# Chunk 9
getVarCov(lme01)
# Chunk 10
summary(lme01)
# Chunk 11
intervals(lme01)
# Chunk 12
lme02 <- lme(Happy ~ Orientation, random = list(Class = pdCompSymm(form = ~ 1 | Orientation)), data = kindergarten, method = "ML")
# Chunk 13
getVarCov(lme02)
# Chunk 14
summary(lme02)
# Chunk 15
intervals(lme02)
gls02 <- gls(Happy ~ Orientation, correlation = corAR1(form = ~ 1 + Orientation | Class), data = kindergarten, method = "ML")
gls02 <- gls(Happy ~ Orientation, correlation = corAR1(form = ~ 1 | Class), data = kindergarten, method = "ML")
# Chunk 1
library(tidyverse)
library(knitr)
library(nlme)
# Chunk 2
kindergarten <- "~/Google Drive/2018W_PSYCH_614/homework_06/kindergarten.csv" %>% read_csv() %>%
mutate(Orientation_lbl = Orientation %>% recode(`0` = "Didn't Attend", `1` = "Attended"))
# Chunk 3
kindergarten %>%
group_by(Class, Orientation_lbl) %>%
summarise(M = mean(Happy) %>% round(2),
SD = sd(Happy) %>% round(2),
n = length(Happy) %>% round(2)) %>%
kable()
# Chunk 4
kindergarten %>%
ggplot(mapping = aes(x = Orientation_lbl, y = Happy, color = Orientation_lbl)) +
geom_point(position = position_jitterdodge(), alpha = 0.25) +
stat_summary(geom = "point", fun.data = mean_cl_normal) +
stat_summary(geom = "errorbar", fun.data = mean_sdl, width = 0) +
facet_wrap(facets = ~ Class) +
theme(legend.position = "top")
# Chunk 5
gls01 <- gls(Happy ~ Orientation, data = kindergarten, method = "ML")
# Chunk 6
summary(gls01)
# Chunk 7
intervals(gls01)
# Chunk 8
lme01 <- lme(Happy ~ Orientation, random = ~ 1 | Class, data = kindergarten, method = "ML")
# Chunk 9
getVarCov(lme01)
# Chunk 10
summary(lme01)
# Chunk 11
intervals(lme01)
# Chunk 12
lme02 <- lme(Happy ~ Orientation, random = list(Class = pdCompSymm(form = ~ 1 | Orientation)), data = kindergarten, method = "ML")
# Chunk 13
getVarCov(lme02)
# Chunk 14
summary(lme02)
# Chunk 15
intervals(lme02)
# Chunk 16
gls02 <- gls(Happy ~ Orientation, correlation = corAR1(form = ~ 1 | Class), data = kindergarten, method = "ML")
summary(gls02)
gls02 <- gls(Happy ~ Orientation, correlation = corAR1(form = ~ 1 | Class), data = kindergarten, weights = varIdent(fixed = ~ 1 | Orientation), method = "ML")
summary(gls02)
gls02 <- gls(Happy ~ Orientation, correlation = corAR1(form = ~ 1 | Class), data = kindergarten, weights = varIdent(form = ~ 1 | Orientation), method = "ML")
summary(gls02)
getVarCov(gls02)[1:22, 1:22] %>%
as_tibble() %>%
kable()
getVarCov(gls02)[1:22, 1:22] %>%
as_tibble()
summary(gls02)
lme(Happy ~ Orientation, random = ~ Orientation | Class, data = kindergarten, method = "ML")
lme(Happy ~ Orientation, random = ~ Orientation | Class, data = kindergarten, method = "ML") %>% summary()
lme(Happy ~ Orientation, random = ~ Orientation | Class, data = kindergarten, method = "ML") %>% getVarCov()
lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = corCompSymm(), data = kindergarten, method = "ML")
lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = corCompSymm(), data = kindergarten, method = "ML") %>% getVarCov()
?gather
# Chunk 1
library(tidyverse)
library(knitr)
library(nlme)
# Chunk 2
kindergarten <- "~/Google Drive/2018W_PSYCH_614/homework_06/kindergarten.csv" %>% read_csv() %>%
mutate(Orientation_lbl = Orientation %>% recode(`0` = "Didn't Attend", `1` = "Attended"))
# Chunk 3
kindergarten %>%
group_by(Class, Orientation_lbl) %>%
summarise(M = mean(Happy) %>% round(2),
SD = sd(Happy) %>% round(2),
n = length(Happy) %>% round(2)) %>%
kable()
# Chunk 4
kindergarten %>%
ggplot(mapping = aes(x = Orientation_lbl, y = Happy, color = Orientation_lbl)) +
geom_point(position = position_jitterdodge(), alpha = 0.25) +
stat_summary(geom = "point", fun.data = mean_cl_normal) +
stat_summary(geom = "errorbar", fun.data = mean_sdl, width = 0) +
facet_wrap(facets = ~ Class) +
theme(legend.position = "top")
# Chunk 5
gls01 <- gls(Happy ~ Orientation, data = kindergarten, method = "ML")
# Chunk 6
summary(gls01)
# Chunk 7
intervals(gls01)
# Chunk 8
lme01 <- lme(Happy ~ Orientation, random = ~ 1 | Class, data = kindergarten, method = "ML")
# Chunk 9
getVarCov(lme01)
# Chunk 10
summary(lme01)
# Chunk 11
intervals(lme01)
# Chunk 12
lme02 <- lme(Happy ~ Orientation, random = list(Class = pdCompSymm(form = ~ 1 | Orientation)), data = kindergarten, method = "ML")
# Chunk 13
getVarCov(lme02)
# Chunk 14
summary(lme02)
# Chunk 15
intervals(lme02)
# Chunk 16
gls02 <- gls(Happy ~ Orientation, correlation = corAR1(form = ~ 1 | Class), data = kindergarten, weights = varIdent(form = ~ 1 | Orientation), method = "ML")
# Chunk 17
getVarCov(gls02)[1:22, 1:22] %>%
as_tibble() %>%
kable()
# Chunk 18
summary(gls02)
# Chunk 19
intervals(gls02)
# Chunk 20
anova(gls01, lme01, lme02, gls02) %>% kable()
# Chunk 21
lkindergarten <- kindergarten %>%
gather(key = item, value = activity, JuneActivity:AugustActivity) %>%
mutate(month = item %>% recode("JuneActivity" = 0, "JulyActivity" = 1, "AugustActivity" = 2),
monthfac = month %>% factor(),
lin = month %>% recode(`0` = -1, `2` = 0, `3` = 1),
quad = month %>% recode(`0` = 1, `2` = -2, `3` = 1))
# contrasts
contrasts(lkindergarten$monthfac) <- cbind(lin = c(-1, 0, 1),
lin = c(1, -2, 1))
# Chunk 22
lkindergarten %>%
ggplot(mapping = aes(x = month, y = activity, color = Orientation_lbl)) +
geom_point() +
geom_smooth() +
facet_wrap(facets = ~ Class)
# Chunk 23
gls03 <- gls(activity ~ month, data = lkindergarten, method = "ML")
# Chunk 24
summary(gls03)
# Chunk 25
intervals(gls03)
lme(activity ~ month, random = ~ month | Class, data = lkindergarten, method = "ML") %>% summary()
lme(activity ~ month, random = ~ month | Class, data = lkindergarten, method = "ML", control = list(opt = "optim")) %>% summary()
lme02 <- lme(Happy ~ Orientation, random = Orientation | Class), data = kindergarten, method = "ML")
lme02 <- lme(Happy ~ Orientation, random = ~ Orientation | Class), data = kindergarten, method = "ML")
lme02 <- lme(Happy ~ Orientation, random = ~ Orientation | Class), data = kindergarten, method = "ML")
lme02 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, data = kindergarten, method = "ML")
lme02 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = corSymm(form = ~ Orientation | Class), data = kindergarten, method = "ML")
lme02 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = corSymm(form = ~ 1 | Class), weights = varIdent(form = ~ 1 | Orientation), data = kindergarten, method = "ML")
lme02 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = corSymm(form = ~ 1 | Class), weights = varIdent(form = ~ 1 | Orientation), data = kindergarten, method = "ML", control = list(opt = "optim"))
lme02 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = corSymm(form = ~ 1 | Class), data = kindergarten, method = "ML", control = list(opt = "optim"))
lme02 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = corSymm(), data = kindergarten, method = "ML", control = list(opt = "optim"))
lme02 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, data = kindergarten, method = "ML", control = list(opt = "optim"))
randslope2 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = list(Class = pdCompSymm(form = ~ 1 | Orientation)), data = kindergarten,, method = "ML")
# Chunk 1
library(tidyverse)
library(knitr)
library(nlme)
# Chunk 2
kindergarten <- "~/Google Drive/2018W_PSYCH_614/homework_06/kindergarten.csv" %>% read_csv() %>%
mutate(Orientation_lbl = Orientation %>% recode(`0` = "Didn't Attend", `1` = "Attended"))
# Chunk 3
kindergarten %>%
group_by(Class, Orientation_lbl) %>%
summarise(M = mean(Happy) %>% round(2),
SD = sd(Happy) %>% round(2),
n = length(Happy) %>% round(2)) %>%
kable()
# Chunk 4
kindergarten %>%
ggplot(mapping = aes(x = Orientation_lbl, y = Happy, color = Orientation_lbl)) +
geom_point(position = position_jitterdodge(), alpha = 0.25) +
stat_summary(geom = "point", fun.data = mean_cl_normal) +
stat_summary(geom = "errorbar", fun.data = mean_sdl, width = 0) +
facet_wrap(facets = ~ Class) +
theme(legend.position = "top")
# Chunk 5
fixedonly1 <- gls(Happy ~ Orientation, data = kindergarten, method = "ML")
# Chunk 6
summary(fixedonly1)
# Chunk 7
intervals(fixedonly1)
# Chunk 8
randint1 <- lme(Happy ~ Orientation, random = ~ 1 | Class, data = kindergarten, method = "ML")
# Chunk 9
getVarCov(randint1)
# Chunk 10
summary(randint1)
# Chunk 11
intervals(randint1)
# Chunk 12
randslope1 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, data = kindergarten, method = "ML", control = list(opt = "optim"))
# Chunk 13
getVarCov(randslope1)
# Chunk 14
summary(randslope1)
# Chunk 15
intervals(randslope1)
randslope2 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = list(Class = pdCompSymm(form = ~ 1 | Orientation)), data = kindergarten,, method = "ML")
intervals(randslope1, which = "fixed")
randslope2 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = list(Class = pdCompSymm(form = ~ 1 | Orientation)), data = kindergarten,, method = "ML")
randslope2 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, correlation = list(Class = pdCompSymm(form = ~ 1 | Orientation)), data = kindergarten, method = "ML")
randslope2 <- gls(Happy ~ Orientation, correlation = list(Class = pdCompSymm(form = ~ 1 | Orientation)), data = kindergarten, method = "ML")
lme(Happy ~ Orientation, random = list(Class = pdCompSymm(form = ~ 1 | Orientation)), data = kindergarten, method = "ML")
randslope2 <- lme(Happy ~ Orientation, random = list(Class = pdCompSymm(form = ~ 1 | Orientation)), weights = varIdent(form = ~ 1 | Orientation), data = kindergarten, method = "ML")
getVarCov(randslope2)
intervals(randslope2)
intervals(randslope2, which = "fixed")
anova(fixedonly1, randint1, randslope1, randslope2) %>% kable()
# Chunk 1
library(tidyverse)
library(knitr)
library(nlme)
# Chunk 2
kindergarten <- "~/Google Drive/2018W_PSYCH_614/homework_06/kindergarten.csv" %>% read_csv() %>%
mutate(Orientation_lbl = Orientation %>% recode(`0` = "Didn't Attend", `1` = "Attended"))
# Chunk 3
kindergarten %>%
group_by(Class, Orientation_lbl) %>%
summarise(M = mean(Happy) %>% round(2),
SD = sd(Happy) %>% round(2),
n = length(Happy) %>% round(2)) %>%
kable()
# Chunk 4
kindergarten %>%
ggplot(mapping = aes(x = Orientation_lbl, y = Happy, color = Orientation_lbl)) +
geom_point(position = position_jitterdodge(), alpha = 0.25) +
stat_summary(geom = "point", fun.data = mean_cl_normal) +
stat_summary(geom = "errorbar", fun.data = mean_sdl, width = 0) +
facet_wrap(facets = ~ Class) +
theme(legend.position = "top")
# Chunk 5
fixedonly1 <- gls(Happy ~ Orientation, data = kindergarten, method = "ML")
# Chunk 6
summary(fixedonly1)
# Chunk 7
intervals(fixedonly1)
# Chunk 8
randint1 <- lme(Happy ~ Orientation, random = ~ 1 | Class, data = kindergarten, method = "ML")
# Chunk 9
getVarCov(randint1)
# Chunk 10
summary(randint1)
# Chunk 11
intervals(randint1)
# Chunk 12
randslope1 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, data = kindergarten, method = "ML", control = list(opt = "optim"))
# Chunk 13
getVarCov(randslope1)
# Chunk 14
summary(randslope1)
# Chunk 15
intervals(randslope1, which = "fixed")
# Chunk 16
randslope2 <- lme(Happy ~ Orientation, random = list(Class = pdCompSymm(form = ~ 1 | Orientation)), weights = varIdent(form = ~ 1 | Orientation), data = kindergarten, method = "ML")
# Chunk 17
getVarCov(randslope2)
# Chunk 18
summary(randslope2)
# Chunk 19
intervals(randslope2, which = "fixed")
# Chunk 20
anova(fixedonly1, randint1, randslope1, randslope2) %>% kable()
# Chunk 21
lkindergarten <- kindergarten %>%
gather(key = item, value = activity, JuneActivity:AugustActivity) %>%
mutate(month = item %>% recode("JuneActivity" = 0, "JulyActivity" = 1, "AugustActivity" = 2),
monthfac = month %>% factor(),
lin = month %>% recode(`0` = -1, `2` = 0, `3` = 1),
quad = month %>% recode(`0` = 1, `2` = -2, `3` = 1))
# contrasts
contrasts(lkindergarten$monthfac) <- cbind(lin = c(-1, 0, 1),
lin = c(1, -2, 1))
# Chunk 22
lkindergarten %>%
ggplot(mapping = aes(x = month, y = activity, color = Orientation_lbl)) +
geom_point() +
geom_smooth() +
facet_wrap(facets = ~ Class)
# Chunk 23
fixedonly2 <- gls(activity ~ month, data = lkindergarten, method = "ML")
# Chunk 24
summary(fixedonly2)
# Chunk 25
intervals(fixedonly2)
randint2 <- lme(activity ~ month, random = ~ 1 | Class, data = lkindergarten, method = "ML")
randint2 <- lme(activity ~ month, random = ~ 1 | Class, data = lkindergarten, method = "ML", control = list(opt = "optim"))
randint2 <- lme(activity ~ month, random = ~ 1 | Class, data = lkindergarten, method = "ML", control = list(opt = "optim"))
intervals(randint2)
randslope3 <- lme(activity ~ month, random = ~ month | Class, data = lkindergarten, method = "ML", control = list(opt = "optim"))
randslope3 <- lme(activity ~ month, random = ~ month | Class, data = lkindergarten, method = "ML", control = list(opt = "optim"))
getVarCov(randslope3)
summary(randslope3)
randslope3 <- lme(activity ~ month, random = ~ month | Class, correlation = corSymm(form = ~ 1 | Class), data = lkindergarten, method = "ML", control = list(opt = "optim"))
randslope3 <- lme(activity ~ month, random = ~ month | Class, data = lkindergarten, method = "ML", control = list(opt = "optim"))
getVarCov(randslope3)
summary(randslope3)
intervals(randslope3)
randslope4 <- lme(activity ~ month + I(month^2), random = ~ month + I(month^2) | Class, data = lkindergarten, method = "ML", control = list(opt = "optim"))
getVarCov(randslope4)
summary(randslope4)
intervals(randslope4)
intervals(randslope4, which = "fixed")
randslope5 <- gls(activity ~ month + I(month^2), correlation = corCompSymm(form = ~ monthfac | Class), data = lkindergarten, method = "ML")
getVarCov(randslope5)[1:66, 1:66] %>%
as_tibble() %>%
kable()
getVarCov(randslope5)[1:66, 1:66] %>%
as_tibble()
summary(randslope5)
intervals(randslope5)
randslope5 <- lme(activity ~ month + I(month^2), random = ~ month + I(month^2) | Class, data = lkindergarten, correlation = corCompSymm(form = ~ monthfac | Class), method = "ML", control = list(opt = "optim"))
getVarCov(randslope5)
randslope5 <- lme(activity ~ month + I(month^2), random = ~ month + I(month^2) | Class, data = lkindergarten, correlation = corCompSymm(form = ~ 1 | Class), method = "ML", control = list(opt = "optim"))
getVarCov(randslope5)
randslope5 <- lme(activity ~ month + I(month^2), random = ~ month + I(month^2) | Class, data = lkindergarten, correlation = corCompSymm(form = ~ 1 | Class), method = "ML", control = list(opt = "optim"))
getVarCov(randslope5)
summary(randslope5)
randslope5 <- lme(activity ~ month + I(month^2), random = list(Class = pdCompSymm(form = ~ 1 | month + I(month^2))), method = "ML", control = list(opt = "optim"))
randslope5 <- lme(activity ~ month + I(month^2), random = list(Class = pdCompSymm(form = ~ 1 | month + I(month^2))), data = lkindergarten, method = "ML", control = list(opt = "optim"))
getVarCov(randslope5)
summary(randslope5)
getVarCov(randslope5)
# Chunk 1
library(tidyverse)
library(knitr)
library(nlme)
# Chunk 2
kindergarten <- "~/Google Drive/2018W_PSYCH_614/homework_06/kindergarten.csv" %>% read_csv() %>%
mutate(Orientation_lbl = Orientation %>% recode(`0` = "Didn't Attend", `1` = "Attended"))
# Chunk 3
kindergarten %>%
group_by(Class, Orientation_lbl) %>%
summarise(M = mean(Happy) %>% round(2),
SD = sd(Happy) %>% round(2),
n = length(Happy) %>% round(2)) %>%
kable()
# Chunk 4
kindergarten %>%
ggplot(mapping = aes(x = Orientation_lbl, y = Happy, color = Orientation_lbl)) +
geom_point(position = position_jitterdodge(), alpha = 0.25) +
stat_summary(geom = "point", fun.data = mean_cl_normal) +
stat_summary(geom = "errorbar", fun.data = mean_sdl, width = 0) +
facet_wrap(facets = ~ Class) +
theme(legend.position = "top")
# Chunk 5
fixedonly1 <- gls(Happy ~ Orientation, data = kindergarten, method = "ML")
# Chunk 6
summary(fixedonly1)
# Chunk 7
intervals(fixedonly1)
# Chunk 8
randint1 <- lme(Happy ~ Orientation, random = ~ 1 | Class, data = kindergarten, method = "ML")
# Chunk 9
getVarCov(randint1)
# Chunk 10
summary(randint1)
# Chunk 11
intervals(randint1)
# Chunk 12
randslope1 <- lme(Happy ~ Orientation, random = ~ Orientation | Class, data = kindergarten, method = "ML", control = list(opt = "optim"))
# Chunk 13
getVarCov(randslope1)
# Chunk 14
summary(randslope1)
# Chunk 15
intervals(randslope1, which = "fixed")
# Chunk 16
randslope2 <- lme(Happy ~ Orientation, random = list(Class = pdCompSymm(form = ~ 1 | Orientation)), weights = varIdent(form = ~ 1 | Orientation), data = kindergarten, method = "ML")
# Chunk 17
getVarCov(randslope2)
# Chunk 18
summary(randslope2)
# Chunk 19
intervals(randslope2, which = "fixed")
# Chunk 20
anova(fixedonly1, randint1, randslope1, randslope2) %>% kable()
# Chunk 21
lkindergarten <- kindergarten %>%
gather(key = item, value = activity, JuneActivity:AugustActivity) %>%
mutate(month = item %>% recode("JuneActivity" = 0, "JulyActivity" = 1, "AugustActivity" = 2),
monthfac = month %>% factor(),
lin = month %>% recode(`0` = -1, `2` = 0, `3` = 1),
quad = month %>% recode(`0` = 1, `2` = -2, `3` = 1))
# contrasts
contrasts(lkindergarten$monthfac) <- cbind(lin = c(-1, 0, 1),
lin = c(1, -2, 1))
# Chunk 22
lkindergarten %>%
ggplot(mapping = aes(x = month, y = activity, color = Orientation_lbl)) +
geom_point() +
geom_smooth() +
facet_wrap(facets = ~ Class)
# Chunk 23
fixedonly2 <- gls(activity ~ month, data = lkindergarten, method = "ML")
# Chunk 24
summary(fixedonly2)
# Chunk 25
intervals(fixedonly2)
# Chunk 26
randint2 <- lme(activity ~ month, random = ~ 1 | Class, data = lkindergarten, method = "ML", control = list(opt = "optim"))
# Chunk 27
getVarCov(randint2)
# Chunk 28
summary(randint2)
# Chunk 29
intervals(randint2)
# Chunk 30
randslope3 <- lme(activity ~ month, random = ~ month | Class, data = lkindergarten, method = "ML", control = list(opt = "optim"))
# Chunk 31
getVarCov(randslope3)
# Chunk 32
summary(randslope3)
# Chunk 33
intervals(randslope3)
# Chunk 34
randslope4 <- lme(activity ~ month + I(month^2), random = ~ month + I(month^2) | Class, data = lkindergarten, method = "ML", control = list(opt = "optim"))
# Chunk 35
getVarCov(randslope4)
# Chunk 36
summary(randslope4)
# Chunk 37
intervals(randslope4, which = "fixed")
# Chunk 38
randslope5 <- lme(activity ~ month + I(month^2), random = list(Class = pdCompSymm(form = ~ 1 | month + I(month^2))), data = lkindergarten, method = "ML", control = list(opt = "optim"))
# Chunk 39
getVarCov(randslope5)
# Chunk 40
summary(randslope5)
# Chunk 41
intervals(randslope5, which = "fixed")
# Chunk 42
anova(randint2, randslope3, randslope4, randslope5) %>% kable()
